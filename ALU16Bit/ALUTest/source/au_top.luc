module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,           // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  
  // IMPORTS
  sig rst;                  // reset signal
   
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
     
    .rst(rst) {
      blinker myBlinker;    // Blink led[8] if the current state is INIT
      manual manual;        // Manual Testing
      auto auto;            // Auto Testing
    }
    
    fsm testmode = {INIT, MANUALMODE, AUTOMODE};   // Define states for initialization, manual testing, and automated testing
  }
   
  always {  
    
    reset_cond.in = ~rst_n;    // input raw inverted reset signal
    rst = reset_cond.out;      // conditioned reset
 
    //led = 8x{myBlinker.blink}; // blink LEDs
    led = 8h00;
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
    
    
    // Linking inputs to manual and auto modules
    manual.io_dip = io_dip;         
    manual.io_button = io_button;
    auto.io_button = io_button;
    auto.io_dip = io_dip;
     
    usb_tx = usb_rx;           // echo the serial data
    
    case(testmode.q){
      // INIT state: Waiting for user to select manual or auto testing    
      testmode.INIT: 
        led = 8x{myBlinker.blink};
        if (io_button[1] == 1){
          testmode.d = testmode.MANUALMODE;
        }
        if (io_button[4] == 1){
          testmode.d = testmode.AUTOMODE;
        }
      // Manual Testing: User inputs for A.B and ALUFN are expected
      testmode.MANUALMODE:
        io_led[0] = manual.ledarray1;
        io_led[1] = manual.result[7:0];
        io_led[2] = manual.result[15:8];
        
        // Exit to INIT state 
        if (io_button[1] == 1){
          testmode.d = testmode.INIT;
        }
      
        // Auto Testing: Predefined A and B, iterates through all available ALU functions
      testmode.AUTOMODE:
        io_led[0] = auto.ledarray1;
        io_led[1] = auto.result[7:0];
        io_led[2] = auto.result[15:8];
        
        // Exit to INIT state
        if (io_button[4] == 1){
          testmode.d = testmode.INIT;
        }
    }
    
  }
}