module manual (
    input clk,    // clock
    input rst,    // reset
    output ledarray1 [8],    // Assigned 8 LED states used to indicate current state/operation
    output result [16],     // Result display
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  
  // IMPORTS
  alu alu;
  
  .clk(clk){
    fsm inputstate = {A, B, OPT}; // to store input values 
    dff ain[16]; // store input for A  
    dff bin[16]; // store input for B
    .rst(rst){
    }
  }
 
  // dff counter[25](.clk(clk), .rst(rst));
 
  always {
    alu.a = 16b0;
    alu.b = 16b0;
    result = 16b0;
    ledarray1 = 8b0;
    alu.alufn = 6b0;
    
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
    
    case(inputstate.q){
      inputstate.A: //A  
        ledarray1 = 8b1;
        result[7:0] = io_dip[1];
        result[15:8] = io_dip[2];
        if (io_button[0] == 1) {
          ain.d[7:0] = io_dip[1];
          ain.d[15:8] = io_dip[2];
          inputstate.d = inputstate.B;
        }
      inputstate.B:
        ledarray1 = 8b10;
        result[7:0] = io_dip[1];
        result[15:8] = io_dip[2];
        if (io_button[2] == 1) {
          bin.d[7:0] = io_dip[1];
          bin.d[15:8] = io_dip[2];
          inputstate.d = inputstate.OPT;       
        }
      inputstate.OPT:
        ledarray1 = 8b100;
        if (io_button[3] == 1) {
          inputstate.d = inputstate.A;
        }
        alu.a = ain.q;
        alu.b = bin.q;
        alu.alufn = io_dip[0][5:0];
        result = alu.alu;
        //io_led[1] = alu.alu[7:0];
        //io_led[2] = alu.alu[15:8];
     }
  }
}