/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module manual_3 (
    input clk,
    input rst,
    output reg [7:0] ledarray1,
    output reg [15:0] result,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  wire [16-1:0] M_alu_alu;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [6-1:0] M_alu_alufn;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  alu_5 alu (
    .alufn(M_alu_alufn),
    .a(M_alu_a),
    .b(M_alu_b),
    .alu(M_alu_alu),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  localparam A_inputstate = 2'd0;
  localparam B_inputstate = 2'd1;
  localparam OPT_inputstate = 2'd2;
  
  reg [1:0] M_inputstate_d, M_inputstate_q = A_inputstate;
  reg [15:0] M_ain_d, M_ain_q = 1'h0;
  reg [15:0] M_bin_d, M_bin_q = 1'h0;
  
  always @* begin
    M_inputstate_d = M_inputstate_q;
    M_bin_d = M_bin_q;
    M_ain_d = M_ain_q;
    
    M_alu_a = 16'h0000;
    M_alu_b = 16'h0000;
    result = 16'h0000;
    ledarray1 = 8'h00;
    M_alu_alufn = 6'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    
    case (M_inputstate_q)
      A_inputstate: begin
        ledarray1 = 8'h01;
        result[0+7-:8] = io_dip[8+7-:8];
        result[8+7-:8] = io_dip[16+7-:8];
        if (io_button[0+0-:1] == 1'h1) begin
          M_ain_d[0+7-:8] = io_dip[8+7-:8];
          M_ain_d[8+7-:8] = io_dip[16+7-:8];
          M_inputstate_d = B_inputstate;
        end
      end
      B_inputstate: begin
        ledarray1 = 8'h02;
        result[0+7-:8] = io_dip[8+7-:8];
        result[8+7-:8] = io_dip[16+7-:8];
        if (io_button[2+0-:1] == 1'h1) begin
          M_bin_d[0+7-:8] = io_dip[8+7-:8];
          M_bin_d[8+7-:8] = io_dip[16+7-:8];
          M_inputstate_d = OPT_inputstate;
        end
      end
      OPT_inputstate: begin
        ledarray1 = 8'h04;
        if (io_button[3+0-:1] == 1'h1) begin
          M_inputstate_d = A_inputstate;
        end
        M_alu_a = M_ain_q;
        M_alu_b = M_bin_q;
        M_alu_alufn = io_dip[0+0+5-:6];
        result = M_alu_alu;
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_ain_q <= M_ain_d;
    M_bin_q <= M_bin_d;
    M_inputstate_q <= M_inputstate_d;
  end
  
endmodule
