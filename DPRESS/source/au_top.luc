module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input button,    
    input start,
    input godmode,
    output red[16],         // LEDs on IO Shield
    output blue[16],
    output green[16],
    output seg[2][8],
    input usb_rx,           // USB->Serial input
    output usb_tx           // USB->Serial output
  ) {
  
  // IMPORTS
  sig rst;                  // reset signal
   
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    
    .rst(rst) {
      game game;
      multi_seven_seg multi_seven_seg;
    }
    
  }
   
  always { 
    reset_cond.in = ~rst_n;    // input raw inverted reset signal
    rst = reset_cond.out;      // conditioned reset
 
    led = 8h00;
    usb_tx = usb_rx;           // echo the serial data
    
    game.button = button;
    game.start = start;
    game.godbtn =  godmode;
    
    red = game.red;
    blue = game.blue;
    green = game.green;
    
    // calculate score and display to 7-seg
    multi_seven_seg.score = game.score;
    seg = multi_seven_seg.seg;

  }
}